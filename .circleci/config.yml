version: 2.1

executors:
  common-executor:
    working_directory: ~/Clever/{{.AppName}}
    docker:
      - image: circleci/node:12-stretch
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results

commands:
  clone-ci-scripts:
    description: Clone the ci-scripts repo
    steps:
      - run:
          name: Clone ci-scripts
          command: cd .. && git clone --depth 1 -v https://github.com/Clever/ci-scripts.git && cd ci-scripts && git show --oneline -s

jobs:
  build:
    executor: common-executor
    steps:
      - checkout
      - run:
          name: Set up .npmrc
          command: |
            sed -i.bak s/\${npm_auth_token}/$NPM_TOKEN/ .npmrc_docker
            mv .npmrc_docker .npmrc
      - run: npm install
      - run:
          name: Build assets
          command: MODE=production make build
          # TODO: Use the following command instead if you'd like to serve assets via the CDN
          # command: |
          #   if [ "${CIRCLE_BRANCH}" != "master" ]; then MODE=production make build; fi;
          #   if [ "${CIRCLE_BRANCH}" == "master" ]; then MODE=production CDN_ASSETS=true make build; fi;
      - persist_to_workspace:
          root: ~/Clever
          paths: "."

  publish:
    executor: common-executor
    steps:
      - attach_workspace:
          at: ~/Clever
      - clone-ci-scripts
      - setup_remote_docker
      - run: ../ci-scripts/circleci/docker-publish $DOCKER_USER $DOCKER_PASS "$DOCKER_EMAIL" $DOCKER_ORG
      - run: ../ci-scripts/circleci/catapult-publish $CATAPULT_URL $CATAPULT_USER $CATAPULT_PASS {{.AppName}}
      # TODO: Uncomment this if you'd like to serve assets via the CDN
      # - run:
      #     # Upload assets to S3, gzipping those that should be gzipped
      #     name: Upload assets to S3
      #     command: |
      #       if [ "${CIRCLE_BRANCH}" == "master" ]; then $HOME/ci-scripts/circleci/s3-upload build/favicon.ico s3://assets.clever.com/{{.AppName}}/build/favicon.ico; fi;
      #       if [ "${CIRCLE_BRANCH}" == "master" ]; then $HOME/ci-scripts/circleci/s3-upload build/images/ s3://assets.clever.com/{{.AppName}}/build/images/; fi;
      #       if [ "${CIRCLE_BRANCH}" == "master" ]; then $HOME/ci-scripts/circleci/s3-upload --content-encoding gzip build/scripts/ s3://assets.clever.com/{{.AppName}}/build/scripts/; fi;
      #       if [ "${CIRCLE_BRANCH}" == "master" ]; then $HOME/ci-scripts/circleci/s3-upload --content-encoding gzip build/styles/ s3://assets.clever.com/{{.AppName}}/build/styles/; fi;

  unit-test:
    executor: common-executor
    steps:
      - attach_workspace:
          at: ~/Clever
      - run:
          name: Set up CircleCI artifacts directories
          command: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
      - run: make lint
      - run: make test

  deploy:
    executor: common-executor
    steps:
      - clone-ci-scripts
      - run: if [ "${CIRCLE_BRANCH}" == "master" ]; then ../ci-scripts/circleci/dapple-deploy $DAPPLE_URL $DAPPLE_USER $DAPPLE_PASS $APP_NAME; fi;

workflows:
  version: 2.1
  build_test_publish_deploy:
    jobs:
      - build
      - unit-test:
          requires:
            - build
      - publish:
          requires:
            - build
      - deploy:
          requires:
            - unit-test
            - publish
